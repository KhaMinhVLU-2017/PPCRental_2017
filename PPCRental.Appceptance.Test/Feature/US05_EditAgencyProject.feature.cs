// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PPCRental.Appceptance.Test.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Back_EndTestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "US05_EditAgencyProject.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Back-end Test", "\t\tIn order to manage all project of agencies\r\n\t\tAs a sale\r\n\t\tI want to edit angec" +
                    "y\'s projects", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Back-end Test")))
            {
                global::PPCRental.Appceptance.Test.Feature.Back_EndTestFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Agency\'s Name",
                        "Status"});
            table1.AddRow(new string[] {
                        "Can ho Enterprise City",
                        "Ly Thi Huyen Chau",
                        "Da duyet"});
            table1.AddRow(new string[] {
                        "Biet thu Saroma Sala Dai Quang Minh",
                        "Ly Thi Huyen Chau",
                        "Cho duyet"});
#line 7
 testRunner.Given("The following projects", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Information",
                        "Value"});
            table2.AddRow(new string[] {
                        "Email",
                        "hoanganh27897@gmail.com"});
            table2.AddRow(new string[] {
                        "Password",
                        "8258518"});
#line 12
 testRunner.And("I login into with sale\'s account", ((string)(null)), table2, "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Edit Agency Project")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Back-end Test")]
        public virtual void EditAgencyProject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Agency Project", ((string[])(null)));
#line 16
 this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 17
  testRunner.When("I edit the project with name \'Can ho Enterprise City\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Information",
                        "Value"});
            table3.AddRow(new string[] {
                        "Property Name",
                        "Can ho Enterprise City"});
            table3.AddRow(new string[] {
                        "Avatar",
                        "DA05-01.JPG"});
            table3.AddRow(new string[] {
                        "Images",
                        "DA05-02.JPG"});
            table3.AddRow(new string[] {
                        "Property Type",
                        "Villa"});
            table3.AddRow(new string[] {
                        "Content",
                        "Can biet thu hoang gia nam o goc duong Dinh Tien Hoang ..."});
            table3.AddRow(new string[] {
                        "Street",
                        "Dinh Tien Hoang"});
            table3.AddRow(new string[] {
                        "Ward",
                        "Phuong DaKao"});
            table3.AddRow(new string[] {
                        "District",
                        "Quan 1"});
            table3.AddRow(new string[] {
                        "Price",
                        "2000000"});
            table3.AddRow(new string[] {
                        "Unit Price",
                        "USD"});
            table3.AddRow(new string[] {
                        "Area",
                        "100"});
            table3.AddRow(new string[] {
                        "Bed Room",
                        "2"});
            table3.AddRow(new string[] {
                        "Bath Room",
                        "2"});
            table3.AddRow(new string[] {
                        "Parking Place",
                        "1"});
            table3.AddRow(new string[] {
                        "User",
                        "Ly Thi Huyen Chau"});
            table3.AddRow(new string[] {
                        "Status",
                        "Da duyet"});
            table3.AddRow(new string[] {
                        "Note",
                        ""});
            table3.AddRow(new string[] {
                        "Sale",
                        "Hoang Anh"});
#line 18
  testRunner.Then("The project details should show", ((string)(null)), table3, "Then ");
#line 38
  testRunner.And("I will edit the information I want to edit and press edit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
